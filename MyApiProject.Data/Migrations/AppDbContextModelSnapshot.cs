// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyApiProject.Data.Context;

#nullable disable

namespace MyApiProject.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MyApiProject.Entity.Entities.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 9, 14, 16, 1, 34, 2, DateTimeKind.Local).AddTicks(4273),
                            Name = "Tools",
                            Status = true
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 9, 14, 16, 1, 34, 2, DateTimeKind.Local).AddTicks(4462),
                            Name = "Home, Garden & Baby",
                            Status = true
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 9, 14, 16, 1, 34, 2, DateTimeKind.Local).AddTicks(4470),
                            Name = "Shoes",
                            Status = true
                        });
                });

            modelBuilder.Entity("MyApiProject.Entity.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 9, 14, 16, 1, 34, 2, DateTimeKind.Local).AddTicks(5486),
                            Name = "Elektrik",
                            ParentId = 0,
                            Priority = 1,
                            Status = true
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 9, 14, 16, 1, 34, 2, DateTimeKind.Local).AddTicks(5488),
                            Name = "Moda",
                            ParentId = 0,
                            Priority = 2,
                            Status = true
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 9, 14, 16, 1, 34, 2, DateTimeKind.Local).AddTicks(5490),
                            Name = "Bilgisayar",
                            ParentId = 1,
                            Priority = 1,
                            Status = true
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 9, 14, 16, 1, 34, 2, DateTimeKind.Local).AddTicks(5491),
                            Name = "Erkek",
                            ParentId = 2,
                            Priority = 1,
                            Status = true
                        });
                });

            modelBuilder.Entity("MyApiProject.Entity.Entities.Detail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Details");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2024, 9, 14, 16, 1, 34, 3, DateTimeKind.Local).AddTicks(6698),
                            Description = "Numquam masanın gördüm gül gitti.",
                            Status = true,
                            Title = "Filmini."
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2024, 9, 14, 16, 1, 34, 3, DateTimeKind.Local).AddTicks(6729),
                            Description = "Orta voluptatem rem sed kulu.",
                            Status = true,
                            Title = "Corporis."
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 4,
                            CreatedDate = new DateTime(2024, 9, 14, 16, 1, 34, 3, DateTimeKind.Local).AddTicks(6756),
                            Description = "Enim minima ad uzattı inventore.",
                            Status = true,
                            Title = "Quae."
                        });
                });

            modelBuilder.Entity("MyApiProject.Entity.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            CreatedDate = new DateTime(2024, 9, 14, 16, 1, 34, 5, DateTimeKind.Local).AddTicks(2737),
                            Description = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            Discount = 3.202115957947930m,
                            Price = 839.02m,
                            Status = true,
                            Title = "Tasty Steel Bacon"
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 3,
                            CreatedDate = new DateTime(2024, 9, 14, 16, 1, 34, 5, DateTimeKind.Local).AddTicks(2764),
                            Description = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            Discount = 1.885995526273320m,
                            Price = 471.32m,
                            Status = true,
                            Title = "Intelligent Concrete Gloves"
                        });
                });

            modelBuilder.Entity("MyApiProject.Entity.Entities.ProductCategory", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("MyApiProject.Entity.Entities.Detail", b =>
                {
                    b.HasOne("MyApiProject.Entity.Entities.Category", "Category")
                        .WithMany("Details")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("MyApiProject.Entity.Entities.Product", b =>
                {
                    b.HasOne("MyApiProject.Entity.Entities.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("MyApiProject.Entity.Entities.ProductCategory", b =>
                {
                    b.HasOne("MyApiProject.Entity.Entities.Category", "Category")
                        .WithMany("ProductCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyApiProject.Entity.Entities.Product", "Product")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("MyApiProject.Entity.Entities.Category", b =>
                {
                    b.Navigation("Details");

                    b.Navigation("ProductCategories");
                });

            modelBuilder.Entity("MyApiProject.Entity.Entities.Product", b =>
                {
                    b.Navigation("ProductCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
